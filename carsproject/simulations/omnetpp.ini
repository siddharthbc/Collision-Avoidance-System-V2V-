[General]
cmdenv-express-mode = true
cmdenv-autoflush = true
cmdenv-status-frequency = 1s
**.cmdenv-log-level = info

ned-path = 
image-path = ../../../omnetpp-5.1.1/images

tkenv-plugin-path = ../../../inet/etc/plugins
output-scalar-file-append = false
debug-on-errors = false
tkenv-default-config = 
sim-time-limit=20s
warmup-period=0s
repeat = 3
**.routingRecorder.enabled = false
#network = RSUExampleScenario

############### Statistics ##################
output-scalar-file = ${resultdir}/${configname}/${repetition}.sca
output-vector-file = ${resultdir}/${configname}/${repetition}.vec
seed-set = ${repetition}
**.vector-recording = true

##########################################################
#            Simulation parameters                       #
##########################################################
debug-on-errors = true
print-undisposed = false

sim-time-limit = 200s

**.scalar-recording = true
**.vector-recording = true

**.debug = false
**.coreDebug = false

*.playgroundSizeX = 2500m
*.playgroundSizeY = 2500m
*.playgroundSizeZ = 50m


##########################################################
# Annotation parameters                                  #
##########################################################
*.annotations.draw = true

##########################################################
# Obstacle parameters                                    #
##########################################################
#*.obstacles.debug = false
#*.obstacles.obstacles = xmldoc("config.xml", "//AnalogueModel[@type='SimpleObstacleShadowing']/obstacles")

##########################################################
#            TraCIScenarioManager parameters             #
##########################################################
*.manager.updateInterval = 1s
*.manager.host = "localhost"
*.manager.port = 9999
*.manager.autoShutdown = true
*.manager.launchConfig = xmldoc("erlangen.launchd.xml")

##########################################################
#                       RSU SETTINGS                     #
#                                                        #
#                                                        #
##########################################################
#*.rsu[0].mobility.x = 2000
#*.rsu[0].mobility.y = 2000
#*.rsu[0].mobility.z = 3#

#*.rsu[*].applType = "TraCIDemoRSU11p"
#*.rsu[*].appl.headerLength = 80 bit
#*.rsu[*].appl.sendBeacons = true
#*.rsu[*].appl.dataOnSch = false
#*.rsu[*].appl.beaconInterval = 1s
#*.rsu[*].appl.beaconUserPriority = 7
#*.rsu[*].appl.dataUserPriority = 5

##########################################################
#            11p specific parameters                     #
#                                                        #
#                    NIC-Settings                        #
##########################################################
#*.connectionManager.sendDirect = true
#*.connectionManager.maxInterfDist = 2600m
#*.connectionManager.drawMaxIntfDist = false

#*.**.nic.mac1609_4.useServiceChannel = false

#*.**.nic.mac1609_4.txPower = 20mW
#*.**.nic.mac1609_4.bitrate = 6Mbps
#*.**.nic.phy80211p.sensitivity = -89dBm

#*.**.nic.phy80211p.useThermalNoise = true
#*.**.nic.phy80211p.thermalNoise = -110dBm

#*.**.nic.phy80211p.decider = xmldoc("config.xml")
#*.**.nic.phy80211p.analogueModels = xmldoc("config.xml")
#*.**.nic.phy80211p.usePropagationDelay = true

#*.**.nic.phy80211p.antenna = xmldoc("antenna.xml", "/root/Antenna[@id='monopole']")

##########################################################
#                    WaveAppLayer                        #
##########################################################
#*.node[*].applType = "TraCIDemo11p"
#*.node[*].appl.headerLength = 80 bit
#*.node[*].appl.sendBeacons = true
#*.node[*].appl.dataOnSch = false
#*.node[*].appl.beaconInterval = 1s

##########################################################
#                      Mobility                          #
##########################################################
*.node[*].veinsmobilityType.debug = true
*.node[*].veinsmobility.x = 0
*.node[*].veinsmobility.y = 0
*.node[*].veinsmobility.z = 1.895
*.node[*0].veinsmobility.accidentCount = 1
*.node[*0].veinsmobility.accidentStart = 75s
*.node[*0].veinsmobility.accidentDuration = 50s

#[Config WithoutChannelSwitching]

#[Config WithChannelSwitching]
#*.**.nic.mac1609_4.useServiceChannel = true#
#*.node[*].appl.dataOnSch = true
#*.rsu[*].appl.dataOnSch = true

################ Channel parameters #####################
**.channelControl.pMax = 10W
**.channelControl.alpha = 1.0
**.channelControl.carrierFrequency = 2100e+6Hz

################ PhyLayer parameters #####################
**.lteNic.phy.channelModel=xmldoc("config_channel.xml")
**.feedbackComputation = xmldoc("config_channel.xml")

################# Deployer parameters #######################
# UEs attached to eNB
**.fbDelay = 1

############### AMC MODULE PARAMETERS ###############
**.rbAllocationType = "localized"
**.deployer.numRbDl = 50
**.deployer.numRbUl = 50
**.numBands = 50


[Config SinglePair]
network = Scenario
### eNodeBs configuration ###
*.eNodeB.mobility.initFromDisplayString = false
*.eNodeB.mobility.initialX = 300m
*.eNodeB.mobility.initialY = 300m
*.node[*].macCellId = 1
*.node[*].masterId = 1
*.node[*].mobility.initFromDisplayString = false

[Config SinglePair-UDP-Infra]
extends=SinglePair

### Traffic configuration ###
*.node[*].numUdpApps = 1 #changed from node*

# Traffic between UEs (ueD2DTx[0] --> ueD2DRx[0])
# Transmitter
*.node[1].udpApp[*].typename = "VoIPSender"
*.node[1].udpApp[*].localPort = 3088+ancestorIndex(0) 
*.node[1].udpApp[*].startTime = uniform(0s,0.02s)
*.node[1].udpApp[*].destAddress = "node[0]"  #changed
*.node[1].udpApp[*].destPort = 1000
# Receiver
*.node[0].udpApp[*].typename = "VoIPReceiver"
*.node[0].udpApp[*].localPort = 1000

# Disable D2D for the eNodeB and the UEs
*.eNodeB.d2dCapable = false
*.node*[0].d2dCapable = false
**.**.amcMode = "AUTO"

[Config SinglePair-UDP-D2D]
extends=SinglePair-UDP-Infra

# Enable D2D for the eNodeB and the UEs involved in direct commulteNications
*.eNodeB.d2dCapable = true
*.node*[*].d2dCapable = true
**.amcMode = "D2D"

# --- Set the D2D peering capabilities ---#
#
# For each D2D-capable UE, write a list of UEs (separated by blank spaces)
# representing the possible peering UEs. Note that this relationship is unidirectional.
# Here, ueD2DTx[0] --> ueD2DRx[0]
*.node[1].lteNic.d2dPeerAddresses = "node[0]"

# --- Select CQI for D2D transmissions --- #
#
# To enable the reporting of CQIs for each D2D link, set the parameter *.eNodeB.lteNic.phy.enableD2DCqiReporting
# To use fixed CQI, set the parameter **.usePreconfiguredTxParams and select the desired CQI using the parameter **.d2dCqi
*.eNodeB.lteNic.phy.enableD2DCqiReporting = true
**.usePreconfiguredTxParams = false
**.d2dCqi = 7

